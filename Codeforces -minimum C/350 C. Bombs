#include <bits/stdc++.h>

using namespace std;
typedef long long LL;

struct Node{
    LL x;
    LL y;
    LL dist;

    Node(int _x, int _y){
        x = _x;
        y = _y;
        dist = abs(x) + abs(y);
    }

    bool operator<(Node& b){
        return dist < b.dist;
    }
};

char dirX(LL x){
    if(x > 0) return 'R';
    return 'L';
}

char dirY(LL y){
    if(y > 0) return 'U';
    return 'D';
}

string convert(LL n){
    stringstream ss;
    ss << n;
    return ss.str();
}

void solve(Node a){
    if(abs(a.x) <= abs(a.y)){
        if(a.x){
            printf("1 %s %c\n", convert(abs(a.x)).c_str(), dirX(a.x));
        }
        printf("1 %s %c\n", convert(abs(a.y)).c_str(), dirY(a.y));
        printf("2\n");

        printf("1 %s %c\n", convert(abs(a.y)).c_str(), dirY(-a.y));
        if(a.x){
            printf("1 %s %c\n", convert(abs(a.x)).c_str(), dirX(-a.x));
        }
        printf("3\n");
    }
    else{
        if(a.y){
            printf("1 %s %c\n", convert(abs(a.y)).c_str(), dirY(a.y));
        }
        printf("1 %s %c\n", convert(abs(a.x)).c_str(), dirX(a.x));
        printf("2\n");

        printf("1 %s %c\n", convert(abs(a.x)).c_str(), dirX(-a.x));
        if(a.y){
            printf("1 %s %c\n", convert(abs(a.y)).c_str(), dirY(-a.y));
        }
        printf("3\n");
    }
}

int main()
{
    int n;
    cin >> n;

    vector<Node> v;
    LL ans = 0;

    for(int i = 0; i < n; ++i){
        LL x, y;
        scanf("%I64d %I64d", &x, &y);

        if(x and y) ans += 6;
        else ans += 4;

        Node a(x, y);
        v.push_back(a);
    }

    sort(v.begin(), v.end());

    cout << ans << endl;
    for(int i = 0; i < n; ++i){
        solve(v[i]);
    }

    return 0;
}
